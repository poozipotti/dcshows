{"version":3,"sources":["actions/index.js","components/ShowListing/ShowLisitng.js","components/ShowList/ShowList.js","containers/TrackedShows.js","containers/UntrackedShows.js","components/TimelineNode/TimelineNode.js","components/TimelineConnector/TimeLineConnector.js","components/TimeLine/Timeline.js","containers/TimeFilter.js","components/NavBar/NavBar.js","components/App.js","reducers/shows.js","reducers/dates.js","reducers/index.js","serviceWorker.js","index.js"],"names":["toggleShow","headliner","type","ShowListing","onClick","this","props","style","color","tracked","className","otherBands","month","day","location","description","React","Component","ShowList","display","shows","length","title","map","show","key","connect","state","filter","dispatch","parseInt","year","toString","padStart","dates","startDate","endDate","showWithinDateFilter","monthMap","1","2","3","4","5","6","7","8","9","10","11","12","TimelineNode","nodeClass","active","selectable","date","TimelineConnector","Timeline","isActive","getOnClick","selectedDate","onClickConfirm","onClickSelect","bind","index","Math","random","selected","getRequiredDates","showDates","sort","a","b","reduce","allDates","currentdate","numberOfMonths","slice","allDatesFilled","Array","fillDate","newMonth","selectDate","changeDate","TimeLine","App","src","width","height","frameborder","allowtransparency","allow","TimeFilter","TrackedShows","UntrackedShows","initialShows","require","localStorageShows","localStorage","getItem","JSON","parse","currentLocalShow","localShow","trackShow","action","setItem","stringify","today","Date","initialDates","getMonth","getFullYear","Months","combineReducers","Boolean","window","hostname","match","store","createStore","rootReducer","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a169c1c.chunk.js","sourcesContent":["export const changeDate = date => ({\n  type: \"CHANGE_DATE\",\n  date\n});\n\nexport const toggleShow = headliner => ({\n  type: \"TOGGLE_SHOW\",\n  headliner\n});\nexport const selectDate = date => ({\n  type: \"SELECT_DATE\",\n  date\n});\n","import React from \"react\";\nimport './ShowListing.css'\n\nclass ShowListing extends React.Component {\n  render() {\n    return (\n      <div onClick={this.props.onClick} style={{color: this.props.tracked ? 'gold':'white'}} className='ShowListing'>\n          <h2>{this.props.headliner}</h2>\n          <p>{this.props.otherBands}</p>\n          <p>{this.props.month}/{this.props.day}</p>\n          <p>{this.props.location}</p>\n          <p>\n            {this.props.description}\n          </p>\n      </div>\n    );\n  }\n}\n\nexport default ShowListing;","import React from \"react\";\nimport \"./ShowList.css\";\nimport ShowListing from \"../ShowListing/ShowLisitng\";\n\nclass ShowList extends React.Component {\n  render() {\n    return (\n      <div style={{display: (this.props.shows.length>0 ?'inherit':'none')}}>\n        <h1>{this.props.title}</h1>\n        <div className = 'horizontalRule'/>\n        {this.props.shows &&\n          this.props.shows.map(show => {\n            return <ShowListing \n              key={show.headliner} \n              {...show} \n              onClick={() =>this.props.onClick(show.headliner)} \n            />;\n          })}\n      </div>\n    );\n  }\n}\n\nexport default ShowList;\n","import { connect } from 'react-redux'\nimport { toggleShow } from '../actions'\nimport ShowList from '../components/ShowList/ShowList'\n\n\nconst mapStateToProps = state => ({\n  shows: state.shows.filter((show) => show.tracked === true),\n  title: 'Tracked' \n})\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: headliner => dispatch(toggleShow(headliner))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowList)","import { connect } from \"react-redux\";\nimport { toggleShow } from \"../actions\";\nimport ShowList from \"../components/ShowList/ShowList\";\n\nconst showWithinDateFilter = ((show, state) => {\n  return (\n    parseInt(show.year + \"\" + show.month.toString().padStart(2,'0')) >=\n      parseInt(state.dates.startDate.year + \"\" + state.dates.startDate.month.toString().padStart(2,'0')) &&\n    parseInt(show.year + \"\" + show.month) <=\n      parseInt(state.dates.endDate.year + \"\" + state.dates.endDate.month.toString().padStart(2,'0'))\n  );\n})\n\nconst mapStateToProps = state => ({\n  shows: state.shows.filter(show => show.tracked === false && showWithinDateFilter(show,state)),\n  title: \"Untracked\"\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: headliner => dispatch(toggleShow(headliner))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowList);\n","import React from \"react\";\nimport './TimelineNode.css';\nconst monthMap = {\n  1:'jan',\n  2:'feb',\n  3:'mar',\n  4:'apr',\n  5:'may',\n  6:'jun',\n  7:'jul',\n  8:'aug',\n  9:'sep',\n  10:'oct',\n  11:'nov',\n  12:'dec'\n}\nclass TimelineNode extends React.Component {\n  render() {\n    let nodeClass = this.props.active ? \"nodeSelected\" : \"node\";\n    if(this.props.selectable){\n      nodeClass += \" selectAvailible\";\n    }\n    return (\n      <div className={\"nodeContainer\"} onClick={this.props.onClick}>\n        <div className={nodeClass}></div>\n        <span className=\"nodeLabel\">{monthMap[this.props.date.month]}</span>\n      </div>\n    );\n  }\n}\n\nexport default TimelineNode;\n","import React from 'react';\nimport './TimelineConnector.css';\n\nclass TimelineConnector extends React.Component {\n  render() {\n    return (\n        <div className='line'></div>\n    )\n  }\n}\n\nexport default TimelineConnector;","import React from \"react\";\nimport \"./Timeline.css\";\nimport TimelineNode from \"../TimelineNode/TimelineNode\";\nimport TimelineConnector from \"../TimelineConnector/TimeLineConnector\";\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isActive = this.isActive.bind(this);\n    this.getOnClick = this.getOnClick.bind(this);\n  }\n  isActive = date => {\n    return (\n      (date.month === this.props.startDate.month &&\n        date.year === this.props.startDate.year) ||\n      (date.month === this.props.endDate.month &&\n        date.year === this.props.endDate.year)\n    );\n  };\n  getOnClick = date => {\n\n      if(this.props.selectedDate != null){\n        return () => {\n          this.props.onClickConfirm(date);\n        }\n      }\n      else if(this.isActive(date)){\n        return () => {\n          this.props.onClickSelect(date);\n        }\n      }else{\n        return () => {\n        }\n      } \n  }\n  render() {\n    return (\n      <div className=\"timelineContainer\">\n        {this.props.dates &&\n          this.props.dates.map((date, index) => {\n            return (\n              <div className=\"timelineContainer\" key={date.month + '-' + date.year}>\n                <TimelineNode\n                  key={date.month + \"-\" + date.year + Math.random()}\n                  selectable={this.props.selectedDate != null}\n                  active={this.isActive(date)}\n                  onClick={this.getOnClick(date)}\n                  selected={\n                    this.props.selectedDate &&\n                    date.month === this.props.selectedDate.month &&\n                    date.year === this.props.selectedDate.year\n                  }\n                  date={date}\n                />\n                {index < this.props.dates.length - 1 ? (\n                  <TimelineConnector\n                    key={date.month + \"-\" + date.year + \"-\" + Math.random()}\n                  />\n                ) : null}\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nexport default Timeline;\n","import { connect } from \"react-redux\";\nimport TimeLine from \"../components/TimeLine/Timeline\";\nimport { selectDate,changeDate } from '../actions'\n\nconst getRequiredDates = state => {\n  let showDates = state.shows\n    .map(show => {\n      return {\n        month: show.month,\n        year: show.year\n      };\n    })\n    .sort((a, b) => {\n      return parseInt(a.year + \"\" + a.month.toString().padStart(2,'0')) > parseInt(b.year + \"\" + b.month.toString().padStart(2,'0'))\n        ? 1\n        : -1;\n    });\n  showDates = [showDates[0], showDates[showDates.length - 1]].reduce(\n    (allDates, currentdate) => {\n      if (allDates.length === 0) {\n        return [currentdate];\n      } else {\n        let numberOfMonths =\n          12 * (currentdate.year - allDates.slice(-1)[0].year);\n        numberOfMonths += currentdate.month - allDates.slice(-1)[0].month;\n        let allDatesFilled = [...new Array(numberOfMonths)].map(\n          (fillDate, index) => {\n            let newMonth = allDates.slice(-1)[0].month + index;\n            return {\n              month: (newMonth % 12)+1,\n              year: allDates.slice(-1)[0].year + parseInt(newMonth / 12)\n            };\n          }\n        );\n        return [...allDates,...allDatesFilled];\n      }\n    },\n    []\n  );\n  return showDates;\n};\n\nconst mapStateToProps = state => ({\n  dates: getRequiredDates(state),\n  ...state.dates\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClickSelect: date => dispatch(selectDate(date)),\n  onClickConfirm: date => dispatch(changeDate(date))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeLine);\n","import React from \"react\";\nimport \"./Navbar.css\";\nimport TimeFilter from \"../../containers/TimeFilter\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"Navbar\">\n        <h1 className=\"navbarTitle\">Shows To Look Out For</h1>\n        <div className='playButton'>\n          <iframe\n            title='playlist'\n            src=\"https://open.spotify.com/embed/playlist/4IjrjeUI5eJKnwS2mcxNv7?si=QlCP49CyR36tXUe-KKDY-A\"\n            width=\"300\"\n            height=\"80\"\n            frameborder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          ></iframe>\n        </div>\n        <TimeFilter />\n      </div>\n      <div className=\"initialBuffer\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './App.css';\nimport TrackedShows from '../containers/TrackedShows';\nimport UntrackedShows from '../containers/UntrackedShows';\nimport Navbar from '../components/NavBar/NavBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <TrackedShows/>\n      <UntrackedShows/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialShows = require(\"./initialShowState.json\").map(show => {\n  let localStorageShows =\n    localStorage.getItem(\"shows\") && JSON.parse(localStorage.getItem(\"shows\"));\n  let currentLocalShow =\n    localStorageShows &&\n    localStorageShows.filter(\n      localShow => localShow.headliner === show.headliner\n    );\n  if (currentLocalShow && currentLocalShow[0]) {\n    return {\n      ...show,\n      tracked: currentLocalShow[0].tracked\n    };\n  }\n  return show;\n});\nconst trackShow = action => {\n  return show => {\n    if (show.headliner === action.headliner) {\n      return {\n        ...show,\n        tracked: !show.tracked\n      };\n    }\n    return show;\n  };\n};\nconst shows = (state = initialShows, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SHOW\":\n      localStorage.setItem(\n        \"shows\",\n        JSON.stringify(state.map(trackShow(action)))\n      );\n      return state.map(trackShow(action));\n    default:\n      return state;\n  }\n};\n\nexport default shows;\n","const today = new Date();\n\nconst initialDates = {\n  startDate: { month: today.getMonth() + 1, year: today.getFullYear() },\n  endDate: { month: (today.getMonth() + 4) %12 , year: today.getFullYear() +parseInt((today.getMonth() + 4)/12)},\n  selectedDate: null\n};\nconst Months = (state = initialDates, action) => {\n  switch (action.type) {\n    case \"CHANGE_DATE\":\n      if (\n        state.selectedDate &&\n        JSON.stringify(state.selectedDate) === JSON.stringify(state.startDate)\n      ) {\n        return {\n          ...state,\n          startDate: action.date,\n          selectedDate: null\n        };\n      } else if (\n        state.selectedDate &&\n        JSON.stringify(state.selectedDate) === JSON.stringify(state.endDate)\n      ) {\n        return {\n          ...state,\n          endDate: action.date,\n          selectedDate: null\n        };\n      } else {\n        return state;\n      }\n    case \"SELECT_DATE\":\n      return {\n        ...state,\n        selectedDate: action.date\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Months;\n","import { combineReducers } from 'redux'\nimport shows from './shows'\nimport dates from './dates'\n\nexport default combineReducers({\n  shows,\n  dates\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport * as serviceWorker from \"./serviceWorker\";\nimport './index.css';\n\nconst store = createStore(\n  rootReducer\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.unregister();"],"sourceRoot":""}